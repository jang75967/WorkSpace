// <auto-generated />
using Infrastructure.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CleanArchitecture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230824045300_Migration_1.0.0")]
    partial class Migration_100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DM80")
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.HasKey("Id");

                    b.ToTable("Groups", "DM80");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "축구 동아리"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "농구 동아리"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MemberUserGroup", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<long>("GroupId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<long>("Id")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("Id");

                    b.ToTable("MemberUserGroups", "DM80");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            GroupId = 1L,
                            Id = 1L
                        },
                        new
                        {
                            UserId = 1L,
                            GroupId = 2L,
                            Id = 2L
                        },
                        new
                        {
                            UserId = 2L,
                            GroupId = 1L,
                            Id = 3L
                        },
                        new
                        {
                            UserId = 3L,
                            GroupId = 2L,
                            Id = 4L
                        },
                        new
                        {
                            UserId = 4L,
                            GroupId = 1L,
                            Id = 5L
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)");

                    b.HasKey("Id");

                    b.ToTable("Users", "DM80");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "bak@gmail.com",
                            Name = "박영석",
                            Password = "password"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "lee@gmail.com",
                            Name = "이건우",
                            Password = "password"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "jo@gmail.com",
                            Name = "조범희",
                            Password = "password"
                        },
                        new
                        {
                            Id = 4L,
                            Email = "an@gmail.com",
                            Name = "안성윤",
                            Password = "password"
                        },
                        new
                        {
                            Id = 5L,
                            Email = "jang@gmail.com",
                            Name = "장동계",
                            Password = "password"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MemberUserGroup", b =>
                {
                    b.HasOne("Domain.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
